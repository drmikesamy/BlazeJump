@using BlazeJump.Common.Enums;
@using BlazeJump.Common.Models;
@using BlazeJump.Common.Services.Message;
@using BlazeJump.Common.Services.Crypto;
@using BlazeJump.Helpers;
@using Newtonsoft.Json;
@inject IMessageService MessageService
@inject NavigationManager NavManager

@if (NEvent != null)
{
    <section>
        <article class="card card-message @Styling">
            <div class="profile-picture" style="background-image: url('@($"{User?.ProfilePic ?? $"/images/profilepics/{new Random().Next(1, 18)}.png"}")')">
            </div>
            <div class="card-body">
                <h3 class="card-username">
                    <a @onclick=ViewUser style="cursor: pointer">@(User?.Username ?? $"{User?.Id?.Substring(0, 10)}...")</a>
                </h3>
                <p class="subtle-info-line">
                    @(TimeAgo.GetTimeAgo(NEvent.CreatedAtDateTime))
                </p>
                @if (NEvent.ParentId != null
                   && MessageService.MessageStore.TryGetValue(NEvent.ParentId, out var quoteMessage))
                {
                    <MessageCard Message=quoteMessage Styling="quote"></MessageCard>
                }
@*                 @if (RelationReg.TryGetRelation(NEvent!.Id, RelationTypeEnum.ReferencedEvent, out var referencedEventIds))
                {
                    @foreach(var referencedEventId in referencedEventIds)
                    {
                        @if (MessageService.MessageStore.TryGetValue(referencedEventId, out var referencedEvent))
                        {
                            <MessageCard Message=referencedEvent Styling="quote"></MessageCard>
                        }
                    }
                   
                } *@
                @ParseEmbeds.ParsePreviewContent(NEvent?.Content).FirstOrDefault()
                <p class="card-content">@(NEvent?.Content.ParseInlineEmbeds() ?? (MarkupString)"(No content)")</p>
                <p class="stats-line">
                    <a @onclick=ViewMessage style="cursor: pointer">@(MessageService.RelationRegister.TryGetRelation(NEvent!.Id, RelationTypeEnum.EventChildren, out var replies) ? replies?.Count() : 0) comments</a><span> | </span>
                    @if (NEvent?.Verified ?? false)
                    {
                        <span>Verified</span>
                    }
                    else
                    {
                        <a @onclick="() => VerifyMessage(NEvent)" style="cursor: pointer">Verify</a>
                    }
                </p>
            </div>
        </article>
    </section>
}