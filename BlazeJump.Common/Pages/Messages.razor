@page "/"
@page "/{PageType}/{Hex}"
@using BlazeJump.Common.Enums;
@using BlazeJump.Common.Pages.Components
@using BlazeJump.Common.Services.Connections;
@using BlazeJump.Common.Models;
@using BlazeJump.Common.Services.Crypto;
@using BlazeJump.Common.Services.Message;
@using BlazeJump.Common.Services.Notification;
@using BlazeJump.Common.Services.UserProfile;
@using BlazeJump.Common.Services.Display;
@using Newtonsoft.Json
@inject IRelayManager RelayManager
@inject IMessageService MessageService
@inject ICryptoService CryptoService
@inject INotificationService NotificationService;
@inject IMessagesDisplay MessagesDisplay;

<div class="background-container">
	<div class="content-container">

		@if (MessagesDisplay.PageType != null && MessagesDisplay.PageType == PageTypeEnum.User && MessagesDisplay.Users.TryGetValue(MessagesDisplay.Hex, out var featuredUser))
		{
			<UserCard User="featuredUser"></UserCard>
		}
		@foreach (var bucket in MessagesDisplay.MessageBuckets)
		{
			@foreach (var message in bucket.Value)
			{
				<MessageCard Message=message></MessageCard>
			}
		}
		<Card>
			<a @onclick="() => MessagesDisplay.LoadMessages()">Load more</a>
		</Card>
		@if (Hex == null)
		{
			<Card>
				<p>Nothing to see here. Click <NavLink href="user/82341f882b6eabcd2ba7f1ef90aad961cf074af15b9ef44a09f9d2a8fbfbe6a2">here</NavLink> for Jack Dorsey's profile.</p>
			</Card>
		}
	</div>
</div>

@code {
	[Parameter]
	public string? PageType { get; set; }
	[Parameter]
	public string? Hex { get; set; }

	protected override async Task OnParametersSetAsync()
	{
		MessagesDisplay.StateUpdated += UpdateState;
		NotificationService.Loading = true;
		if(PageType != null && Hex != null)
			await MessagesDisplay.Init(PageType.ToLowerInvariant() == PageTypeEnum.Event.ToString().ToLowerInvariant() ? PageTypeEnum.Event : PageTypeEnum.User, Hex);
		NotificationService.Loading = false;
	}

	public void UpdateState(object? o, EventArgs e)
	{
		StateHasChanged();
	}

}