@using BlazeJump.Client.Enums;
@using BlazeJump.Client.Models;
@using BlazeJump.Client.Services.Message;
@inject IMessageService MessageService
@inject NavigationManager NavManager

<div class="box">
	@if (Message.ParentNEvent != null)
	{
		<MessageCard Message=Message.ParentNEvent></MessageCard>
	}
	<div class="card box">
		<div class="profile-picture">
			<img src="@($"images/profilepics/{Message.User?.ProfilePic ?? ""}.png")" alt="profile picture">
		</div>
		<div class="card-body">
			<h3>
				@(Message.Pubkey ?? "")
			</h3>
			<p>@(Message.Content ?? "")</p>
			<p>
				@(Message.CreatedAtDateTime) | <img src="./images/layout/loader.gif" style="@(Loading ? "display: inline-block" : "display: none")" /><a @onclick=ViewMessage style="cursor: pointer; @(Loading ? "display: none" : "display: inline-block")">@Message.ReplyCount comments</a>
			</p>
		</div>
	</div>
	@foreach (var child in Message.ChildNEvents)
	{
		<MessageCard Message=child></MessageCard>
	}
</div>

@code {
	[Parameter]
	public NEvent Message { get; set; }
	public bool Loading { get; set; } = false;

	public async Task ViewMessage()
	{
		NavManager.NavigateTo($"event/{Message.Id}");
	}
}