@using BlazeJump.Client.Enums;
@using BlazeJump.Client.Models;
@using BlazeJump.Client.Services.Message;
@using BlazeJump.Helpers;
@inject IMessageService MessageService
@inject NavigationManager NavManager

<section>
	<article class="card card-message">
		<div class="profile-picture">
			<img src="@($"{Message.User?.ProfilePic ?? $"images/profilepics/{new Random().Next(1, 18)}.png"}")" alt="profile picture">
		</div>
		<div class="card-body">
			<h3>
				<a href="user/@(Message.User?.Id)">@(Message.User?.Username ?? $"{Message.User?.Id.Substring(0, 10)}...")</a>
			</h3>
			@ParseEmbeds.ParseEmbedsFromContent(Message.Content).FirstOrDefault()
			<p>@(Message.Content ?? "(No content)")</p>
			<p>
				@(TimeAgo.GetTimeAgo(Message.CreatedAtDateTime)) ago | <a @onclick=ViewMessage style="cursor: pointer">@Message.ReplyCount comments</a>
			</p>
		</div>
	</article>
</section>

@foreach (var child in Message.ChildNEvents)
{
	<MessageCard Message=child></MessageCard>
}

@code {
	[Parameter]
	public NEvent Message { get; set; }

	public async Task ViewMessage()
	{
		NavManager.NavigateTo($"event/{Message.Id}");
	}
}